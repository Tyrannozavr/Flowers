"""empty message

Revision ID: e31c2cedcffa
Revises: e72489e18ba8
Create Date: 2025-04-09 08:43:07.776696

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e31c2cedcffa'
down_revision: Union[str, None] = 'e72489e18ba8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_attributes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shop_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('icon', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_attribute_values',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('attribute_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attribute_id'], ['product_attributes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shop_type_attributes',
    sa.Column('shop_type_id', sa.Integer(), nullable=False),
    sa.Column('attribute_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attribute_id'], ['product_attributes.id'], ),
    sa.ForeignKeyConstraint(['shop_type_id'], ['shop_types.id'], ),
    sa.PrimaryKeyConstraint('shop_type_id', 'attribute_id')
    )
    op.create_table('shop_attributes',
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('attribute_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attribute_id'], ['product_attributes.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('shop_id', 'attribute_id')
    )
    op.create_table('product_attribute_value_association',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('attribute_value_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attribute_value_id'], ['product_attribute_values.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('product_id', 'attribute_value_id')
    )
    op.add_column('shops', sa.Column('tg', sa.String(), nullable=True))
    op.add_column('shops', sa.Column('whatsapp', sa.String(), nullable=True))
    op.alter_column('shops', 'addresses',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='contains {phone: int, address: str}',
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('shops', 'addresses',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment=None,
               existing_comment='contains {phone: int, address: str}',
               existing_nullable=True)
    op.drop_column('shops', 'whatsapp')
    op.drop_column('shops', 'tg')
    op.drop_table('product_attribute_value_association')
    op.drop_table('shop_attributes')
    op.drop_table('shop_type_attributes')
    op.drop_table('product_attribute_values')
    op.drop_table('shop_types')
    op.drop_table('product_attributes')
    # ### end Alembic commands ###
