"""empty message

Revision ID: 8380476e9db4
Revises: b29a88c03003
Create Date: 2025-02-27 02:44:24.317742

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8380476e9db4'
down_revision: Union[str, None] = 'b29a88c03003'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_superadmin', sa.Boolean(), nullable=True),
    sa.Column('telegram_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_removed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('consultations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('is_sent', sa.Boolean(), nullable=True),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('recipient_name', sa.String(), nullable=True),
    sa.Column('recipient_phone', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('house', sa.String(), nullable=True),
    sa.Column('building', sa.String(), nullable=True),
    sa.Column('apartment', sa.String(), nullable=True),
    sa.Column('delivery_method', sa.String(), nullable=True),
    sa.Column('delivery_date', sa.String(), nullable=True),
    sa.Column('delivery_time', sa.String(), nullable=True),
    sa.Column('wishes', sa.String(), nullable=True),
    sa.Column('card_text', sa.String(), nullable=True),
    sa.Column('is_self_pickup', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('NOT_PAID', 'PAID', 'CANCELED', name='orderstatus'), nullable=True),
    sa.Column('is_sent', sa.Boolean(), nullable=True),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('ingredients', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_items_id'), 'order_items', ['id'], unique=False)
    op.add_column('shops', sa.Column('id', sa.Integer(), autoincrement=True, nullable=False))
    op.add_column('shops', sa.Column('subdomain', sa.String(), nullable=False))
    op.add_column('shops', sa.Column('logo_url', sa.String(), nullable=True))
    op.add_column('shops', sa.Column('primary_color', sa.String(), nullable=True))
    op.add_column('shops', sa.Column('owner_id', sa.Integer(), nullable=False))
    op.add_column('shops', sa.Column('addresses', postgresql.JSON(astext_type=sa.Text()), nullable=True))
    op.create_unique_constraint(None, 'shops', ['subdomain'])
    op.create_foreign_key(None, 'shops', 'users', ['owner_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'shops', type_='foreignkey')
    op.drop_constraint(None, 'shops', type_='unique')
    op.drop_column('shops', 'addresses')
    op.drop_column('shops', 'owner_id')
    op.drop_column('shops', 'primary_color')
    op.drop_column('shops', 'logo_url')
    op.drop_column('shops', 'subdomain')
    op.drop_column('shops', 'id')
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_table('products')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_table('consultations')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
